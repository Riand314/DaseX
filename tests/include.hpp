#pragma once

#include <cstdio>
#include <gtest/gtest.h>
#include "pipeline_task.hpp"
#include "scheduler.hpp"
#include "scheduler_read.hpp"
#include <thread>
#include <arrow/api.h>
#include <memory>
#include <string>
#include "arrow_help.hpp"
#include "binder.h"
#include "bound_in_expression.hpp"
#include "bound_project_function_expression.hpp"
#include "catalog.hpp"
#include "expression.hpp"
#include "expression_executor.hpp"
#include "like.hpp"
#include "logical_type.hpp"
#include "nest_loop_join_plan.h"
#include "numa_help.hpp"
#include "numeric.hpp"
#include "optimizer.hpp"
#include "physical_filter.hpp"
#include "physical_hash_aggregation.hpp"
#include "physical_hash_join.hpp"
#include "physical_order.hpp"
#include "physical_project.hpp"
#include "create_statement.hpp"
#include "postgres_parser.hpp"
#include "binder.h"
#include "spdlog/fmt/bundled/core.h"
#include "planner.hpp"
#include "nest_loop_join_plan.h"
#include "statement_type.hpp"
#include "select_statement.hpp"
#include "physical_radix_join.hpp"
#include "physical_hash_aggregation.hpp"
#include "pipeline_group_execute.hpp"
#include "pipe.h"
#include "expression_executor.hpp"
#include "expression.hpp"
#include "arrow_help.hpp"
#include <spdlog/spdlog.h>
#include "like.hpp"
#include "string_functions.hpp"
#include "physical_result_collector.hpp"
#include "physical_order.hpp"
#include "numeric.hpp"
#include "bound_project_function_expression.hpp"
#include "physical_hash_join.hpp"
#include "physical_nested_loop_join.hpp"
#include "physical_result_collector.hpp"
#include "physical_table_scan.hpp"
#include "pipe.h"
#include "pipeline_group_execute.hpp"
#include "pipeline_task.hpp"
#include "planner.hpp"
#include "postgres_parser.hpp"
#include "projection_plan.h"
#include "rc.hpp"
#include "scheduler.hpp"
#include "seq_scan_plan.h"
#include "spdlog/fmt/bundled/core.h"
#include "string_functions.hpp"
#include <arrow/api.h>
#include <cinttypes>
#include <cstdio>
#include <fstream>
#include <gtest/gtest.h>
#include <memory>
#include <spdlog/spdlog.h>
#include <sstream>
#include "bound_in_expression.hpp"
#include "bound_case_expression.hpp"
#include "physical_hash_aggregation_with_multifield.hpp"
#include "date.hpp"

#define CHUNK_SZIE 4096

using namespace DaseX;